library(tidyverse)
# url where the data is located
url <- "https://dax-cdn.cdn.appdomain.cloud/dax-airline/1.0.1/lax_to_jfk.tar.gz"
# download the file
download.file(url, destfile = "lax_to_jfk.tar.gz")
# untar the file so we can get the csv only
untar("lax_to_jfk.tar.gz")
# read_csv only 
sub_airline <- read_csv("lax_to_jfk/lax_to_jfk.csv",
                        col_types = cols('DivDistance' = col_number(), 
                                         'DivArrDelay' = col_number()))
# Boxplot
ggplot(data = sub_airline, mapping = aes(x = Reporting_Airline, y = ArrDelay)) +
  geom_boxplot(fill = "bisque",color = "black", alpha = 0.3) +
  geom_jitter(aes(color = 'blue'), alpha=0.2) +
  labs(x = "Airline") +
  ggtitle("Arrival Delays by Airline") +
  guides(color = "none") +
  theme_minimal() +
  coord_cartesian(ylim = quantile(sub_airline$ArrDelay, c(0, 0.99)))
# Load Alaska data, deleting rows that have missing departure delay or arrival delay data
alaska_flights <- sub_airline %>%
  filter(Reporting_Airline == "AS") %>%
  filter(!is.na(DepDelay) & !is.na(ArrDelay)) %>%
  filter(DepDelay < 40)
ggplot(data = alaska_flights, mapping = aes(x = DepDelay, y = ArrDelay)) +
  geom_point() +
  ggtitle("Alaska Flight Depature Delays vs Arrival Delays")
  # list the data types for each column
  str(sub_airline)
# Now, we turn our focus to "ArrDelayMinutes" as we want to create models to predict this 
  class(sub_airline$ArrDelayMinutes)
  # Next, let's take a look at other variables, like "DepDelayMinutes" that could potentially help predict "ArrDelayMinutes
  # Find the correlation between the following columns: DepDelayMinutes and ArrDelayMinutes.
  cor(sub_airline$DepDelayMinutes, sub_airline$ArrDelayMinutes)
  # Let's find the scatterplot of "DepDelayMinutes" and "ArrDelayMinutes" of all airlines.
  ggplot(data = sub_airline, mapping = aes(x = DepDelayMinutes, y = ArrDelayMinutes)) +
    geom_point() + 
    geom_smooth(method = "lm", na.rm = TRUE)
  
  # From the plot, as the depature delay ("DepDelayMinutes") increases, the arrival delay ("ArrDelayMinutes") increases. This indicates a positive direct correlation between these two variables. "DepDelayMinutes" may be a decent predictor of "ArrDelayMinutes" since the regression line is increasing and generally matches the data points.
    cor(sub_airline$DepDelayMinutes, sub_airline$ArrDelayMinutes)
  
  # Let's now look at if "WeatherDelay" is a good predictor variable of "ArrDelayMinutes"
    ggplot(data = sub_airline, mapping = aes(x = WeatherDelay, y = ArrDelayMinutes)) +
      geom_point() + 
      geom_smooth(method = "lm", na.rm = TRUE)
    #Weather delay does not seem like a good predictor of arrival delay minutes since the regression line is close to horizontal. Also, for small values of "WeatherDelay", the data points are very scattered and far from the fitted line, showing lots of variability. Therefore it is not a reliable variable.
    cor(sub_airline$WeatherDelay, sub_airline$ArrDelayMinutes, use = "complete.obs")
    cor(sub_airline$CarrierDelay, 
        sub_airline$ArrDelayMinutes, 
        use = "complete.obs")
    ggplot(data = sub_airline, mapping = aes(x = CarrierDelay, y = ArrDelayMinutes)) +
      geom_point() + 
      geom_smooth(method = "lm", na.rm = TRUE)   
    
    
